{"version":3,"sources":["webparts/Services/bal/utilities.ts"],"names":[],"mappings":"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","file":"webparts/Services/bal/utilities.js","sourcesContent":["import { WebPartContext } from \"@microsoft/sp-webpart-base\";\r\nimport { ICabaModuleProps } from \"../interface/ICabaModuleProps\";\r\n// import { IEmailProperties } from \"@pnp/sp/sputilities\";\r\nimport { sp } from \"sp-pnp-js\";\r\nexport interface IMonth {\r\n    Id: number;\r\n    Title: string;\r\n    ShortMonth: string;\r\n    NarrowMonth: string;\r\n}\r\n\r\nexport interface TypedHash<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport interface IUtilities {\r\n    filterData(jsonData: any, filterValue: string, excludeColumns: Array<string>): Promise<any>;\r\n    MonthColl(): Array<IMonth>;\r\n    hideShow(hideIt: boolean, props: WebPartContext, loadingMessage: string): void;\r\n    // sendEmail(to: string[], cc: string[], bcc: string[], subject: string, body: string, AdditionalHeaders: TypedHash<string>\r\n    //     , props: IEximBankProps, from?: string): void;\r\n}\r\n\r\nexport default function Utilities() {\r\n    const filterData = async (jsonData: any, filterValue: string, includeColumns: Array<string>) => {\r\n        const lowercasedValue = filterValue.toLowerCase().trim();\r\n        if (lowercasedValue === \"\") return jsonData;\r\n        else {\r\n            const filteredData = jsonData.filter(item => {\r\n                return Object.keys(item).some(key =>\r\n                    includeColumns.includes(key) ? item[key] !== undefined && item[key] !== null ? item[key].toString().toLowerCase().includes(lowercasedValue) : false : false\r\n                );\r\n            });\r\n            return filteredData;\r\n        }\r\n    };\r\n\r\n    const MonthColl = () => {\r\n        let Years: Array<IMonth> = new Array<IMonth>();\r\n        let dateObj = new Date();\r\n\r\n        for (let m = 0; m <= 11; m++) {\r\n            let particularDate = new Date(dateObj.getFullYear(), m, 1);\r\n            Years.push({\r\n                Id: m + 1,\r\n                Title: particularDate.toLocaleString('en-us', { month: 'long' }),\r\n                ShortMonth: particularDate.toLocaleString('en-us', { month: 'short' }),\r\n                NarrowMonth: particularDate.toLocaleString('en-us', { month: 'narrow' })\r\n            });\r\n        }\r\n\r\n        return Years;\r\n    };\r\n\r\n    const hideShow = (hideIt: boolean, ctx: WebPartContext, loadingMessage: string) => {\r\n        if (hideIt) {\r\n            ctx.statusRenderer.clearLoadingIndicator(document.getElementById('divBlockRequestsLoader'));\r\n            document.getElementById('divBlockRequestsLoader').setAttribute(\"style\", \"height: 0px !important;\");\r\n        }\r\n        else {\r\n            document.getElementById('divBlockRequestsLoader').setAttribute(\"style\", \"height: 1100px !important;\");\r\n            ctx.statusRenderer.displayLoadingIndicator(document.getElementById('divBlockRequestsLoader'), loadingMessage, 1);\r\n\r\n        }\r\n    };\r\n\r\n    // const sendEmail = async (to: string[], cc: string[], bcc: string[], subject: string, body: string\r\n    //     , additionalHeaders: TypedHash<string>, props: IEximBankProps, from?: string) => {\r\n\r\n    //     const emailProps: IEmailProperties = {\r\n    //         To: to,\r\n    //         CC: cc,\r\n    //         BCC: bcc,\r\n    //         Subject: subject,\r\n    //         Body: body\r\n    //     };\r\n\r\n    //     if (from !== null && from !== undefined && from.trim() !== \"\") {\r\n    //         emailProps.From = from;\r\n    //     }\r\n    //     if (additionalHeaders !== null && additionalHeaders !== undefined) {\r\n    //         emailProps.AdditionalHeaders = additionalHeaders;\r\n    //     }\r\n        \r\n    //     return await sp.utility.sendEmail(emailProps);\r\n    // };\r\n\r\n    return {\r\n        filterData,\r\n        MonthColl,\r\n        hideShow,\r\n        //sendEmail\r\n    };\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}