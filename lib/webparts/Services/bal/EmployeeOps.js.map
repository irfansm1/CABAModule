{"version":3,"sources":["webparts/Services/bal/EmployeeOps.ts"],"names":[],"mappings":"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","file":"webparts/Services/bal/EmployeeOps.js","sourcesContent":["import { ICabaModuleProps } from '../interface/ICabaModuleProps';\r\nimport SPCRUDOPS from '../dal/spcrudops';\r\n// import { IEximTravelProps } from \"../interface/IEximTravelProps\";\r\nimport { IEximCabaProps } from '../interface/IEximCabaProps';\r\nimport { IEmployee } from '../interface/IEmployee';\r\n\r\n\r\nexport interface EmployeeOps {\r\n    getEmployee( props: ICabaModuleProps): Promise<IEximCabaProps>;\r\n \r\n}\r\n\r\nexport default function EmployeeOps() {\r\n    const spCrudOps = SPCRUDOPS();    \r\n        const getGroups=(groupArray)=>{\r\n            let groups= \"\";\r\n            groupArray.forEach(element => {\r\n                groups =groups+ (groups==\"\"?element.ShortName:\",\"+element.ShortName)\r\n            });\r\n            return groups;\r\n        }\r\n        const getEmployee = async (props: ICabaModuleProps): Promise<IEmployee> => {\r\n            debugger;\r\n            var currentUserLogin = props.currentSPContext.pageContext._user._email;\r\n          //  var currentUserEmail = props.currentSPContext.pageContext._user._email;\r\n\r\n            //var currentUserLogin=(props.currentSPContext.pageContext._user._displayName==\"spfarmadmin\")?\"developer4@eximbankindia.in\":props.currentSPContext.pageContext._user._email;\r\n            //props.currentSPContext.pageContext._user._email;\r\n            return await (await spCrudOps).currentUserInfo(props).then(async(userInfo:any) =>\r\n                {\r\n                    console.log(userInfo)\r\n                    var currentloginname = userInfo.LoginName;\r\n                    var LoggedInUser = encodeURIComponent(currentloginname);\r\n                    if(LoggedInUser==='i%3A0%23.f%7Cmembership%7C%C3%A0nsh.s')\r\n                    {\r\n                        LoggedInUser='i%3A0%23.f%7Cmembership%7CAnsh.s';\r\n                    }\r\n                    return await (await spCrudOps).getRootData(\"EmployeeMaster\"\r\n                    , \"*,Title,Designation/Title,LeaveLevel1/Title,LeaveLevel2/Name,LeaveLevel2/Title,LeaveLevel2/Id,SubGroup/ShortName,CurrentOfficeLocation/Title,UserName/Name\"\r\n                    , \"SubGroup,Designation,LeaveLevel1,LeaveLevel2,CurrentOfficeLocation,UserName\"\r\n                    , \"(UserName/Name eq '\"+LoggedInUser+\"')\"\r\n                    // , \"(CompanyEmail eq '\"+(currentUserLogin)+\"')\"\r\n                    , { column: 'Id', isAscending: false }, props).then(results => {\r\n                        console.log(results);\r\n                        let employees: Array<IEmployee> = new Array<IEmployee>();\r\n                        results.map(item => {\r\n                            employees.push({\r\n                            Title:item.Title,\r\n                            EmployeeId:item.Title,\r\n                            EmployeeTitle:item.EmployeeTitle,\r\n                            FirstName:item.FirstName,\r\n                            MiddleName:item.MiddleName,\r\n                            LastName:item.LastName,\r\n                            UserName:item.UserName,\r\n                            Gender:item.Gender,\r\n                            OfficeLocation:item.OfficeLocation,\r\n                            CurrentOfficeLocation:item.CurrentOfficeLocation.Title,\r\n                            SubGroup:(item.SubGroup.length>0 ? getGroups(item.SubGroup):\"\"),\r\n                            Unit:item.Unit,\r\n                            EmployeeType:item.EmployeeType,\r\n                            Scale:item.Scale,\r\n                            Grade:item.Grade,\r\n                            DesignationId:item.Designation.Title,\r\n                            Designation:item.Designation.Title,\r\n                            LoginUserDesignation:item.Designation.Title,\r\n                            Payscale:item.Payscale,\r\n                            ReportingManager:item.ReportingManager,\r\n                            AlternateReportingManager:item.AlternateReportingManager,\r\n                            Active:item.Active,\r\n                            Phone_x0020_No:item.Phone_x0020_No,\r\n                            MobileNo_x002e_:item.MobileNo_x002e_,\r\n                            CompanyEmail:item.CompanyEmail,\r\n                            AlternateEmail:item.AlternateEmail,\r\n                            LeaveLevel1:item.LeaveLevel1.Title,\r\n                            LeaveLevel2:item.LeaveLevel2.Name,\r\n                            LeaveLevel2val:item.LeaveLevel2.Title,\r\n                            LeaveLevel2Id:item.LeaveLevel2Id,\r\n                            Role:item.Role,\r\n                            BranchName:item.BranchName,\r\n                            HHApproverName:item.HHApproverName,\r\n                            LTCDate:item.LTCDate,\r\n                            TempDOB:item.TempDOB,\r\n                            EmpType:item.EmpType\r\n                            });\r\n                        });\r\n    \r\n                        return employees[0];\r\n                    },error=>{\r\n                        console.log(error);\r\n                    });\r\n                })\r\n                \r\n        };\r\n\r\n\r\n    return {\r\n        getEmployee\r\n       \r\n    };\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}