{"version":3,"sources":["webparts/Services/bal/EmployeeOps.ts"],"names":[],"mappings":"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","file":"webparts/Services/bal/EmployeeOps.js","sourcesContent":["import { ICabaModuleProps } from '../interface/ICabaModuleProps';\nimport SPCRUDOPS from '../dal/spcrudops';\n// import { IEximTravelProps } from \"../interface/IEximTravelProps\";\nimport { IEximCabaProps } from '../interface/IEximCabaProps';\nimport { IEmployee } from '../interface/IEmployee';\n\n\nexport interface EmployeeOps {\n    getEmployee( props: ICabaModuleProps): Promise<IEximCabaProps>;\n \n}\n\nexport default function EmployeeOps() {\n    const spCrudOps = SPCRUDOPS();    \n        const getGroups=(groupArray)=>{\n            let groups= \"\";\n            groupArray.forEach(element => {\n                groups =groups+ (groups==\"\"?element.ShortName:\",\"+element.ShortName)\n            });\n            return groups;\n        }\n        const getEmployee = async (props: ICabaModuleProps): Promise<IEmployee> => {\n            debugger;\n            var currentUserLogin = props.currentSPContext.pageContext._user._email;\n          //  var currentUserEmail = props.currentSPContext.pageContext._user._email;\n\n            //var currentUserLogin=(props.currentSPContext.pageContext._user._displayName==\"spfarmadmin\")?\"developer4@eximbankindia.in\":props.currentSPContext.pageContext._user._email;\n            //props.currentSPContext.pageContext._user._email;\n            return await (await spCrudOps).currentUserInfo(props).then(async(userInfo:any) =>\n                {\n                    console.log(userInfo)\n                    var currentloginname = userInfo.LoginName;\n                    var LoggedInUser = encodeURIComponent(currentloginname);\n                    if(LoggedInUser==='i%3A0%23.f%7Cmembership%7C%C3%A0nsh.s')\n                    {\n                        LoggedInUser='i%3A0%23.f%7Cmembership%7CAnsh.s';\n                    }\n                    return await (await spCrudOps).getRootData(\"EmployeeMaster\"\n                    , \"*,Title,Designation/Title,LeaveLevel1/Title,LeaveLevel2/Name,LeaveLevel2/Title,LeaveLevel2/Id,SubGroup/ShortName,CurrentOfficeLocation/Title,UserName/Name\"\n                    , \"SubGroup,Designation,LeaveLevel1,LeaveLevel2,CurrentOfficeLocation,UserName\"\n                    , \"(UserName/Name eq '\"+LoggedInUser+\"')\"\n                    // , \"(CompanyEmail eq '\"+(currentUserLogin)+\"')\"\n                    , { column: 'Id', isAscending: false }, props).then(results => {\n                        console.log(results);\n                        let employees: Array<IEmployee> = new Array<IEmployee>();\n                        results.map(item => {\n                            employees.push({\n                            Title:item.Title,\n                            EmployeeId:item.Title,\n                            EmployeeTitle:item.EmployeeTitle,\n                            FirstName:item.FirstName,\n                            MiddleName:item.MiddleName,\n                            LastName:item.LastName,\n                            UserName:item.UserName,\n                            Gender:item.Gender,\n                            OfficeLocation:item.OfficeLocation,\n                            CurrentOfficeLocation:item.CurrentOfficeLocation.Title,\n                            SubGroup:(item.SubGroup.length>0 ? getGroups(item.SubGroup):\"\"),\n                            Unit:item.Unit,\n                            EmployeeType:item.EmployeeType,\n                            Scale:item.Scale,\n                            Grade:item.Grade,\n                            DesignationId:item.Designation.Title,\n                            Designation:item.Designation.Title,\n                            LoginUserDesignation:item.Designation.Title,\n                            Payscale:item.Payscale,\n                            ReportingManager:item.ReportingManager,\n                            AlternateReportingManager:item.AlternateReportingManager,\n                            Active:item.Active,\n                            Phone_x0020_No:item.Phone_x0020_No,\n                            MobileNo_x002e_:item.MobileNo_x002e_,\n                            CompanyEmail:item.CompanyEmail,\n                            AlternateEmail:item.AlternateEmail,\n                            LeaveLevel1:item.LeaveLevel1.Title,\n                            LeaveLevel2:item.LeaveLevel2.Name,\n                            LeaveLevel2val:item.LeaveLevel2.Title,\n                            LeaveLevel2Id:item.LeaveLevel2Id,\n                            Role:item.Role,\n                            BranchName:item.BranchName,\n                            HHApproverName:item.HHApproverName,\n                            LTCDate:item.LTCDate,\n                            TempDOB:item.TempDOB,\n                            EmpType:item.EmpType\n                            });\n                        });\n    \n                        return employees[0];\n                    },error=>{\n                        console.log(error);\n                    });\n                })\n                \n        };\n\n\n    return {\n        getEmployee\n       \n    };\n}"],"sourceRoot":"../../../../src"}