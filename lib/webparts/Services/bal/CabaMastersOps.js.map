{"version":3,"sources":["webparts/Services/bal/CabaMastersOps.ts"],"names":[],"mappings":"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","file":"webparts/Services/bal/CabaMastersOps.js","sourcesContent":["import { ICabaModuleProps } from '../interface/ICabaModuleProps';\r\nimport SPCRUDOPS from '../dal/spcrudops';\r\nimport { IMasterProps } from '../interface/IMasterProps';\r\nimport { Item } from 'sp-pnp-js';\r\n\r\n\r\nexport interface CabaMasterOps {\r\n    getFlatSpecifications(props:ICabaModuleProps): Promise<any>;\r\n    getFlatType(props: ICabaModuleProps): Promise<any>;    \r\n    getOccupancyType(props: ICabaModuleProps): Promise<any>;\r\n    getSocietyName(props: ICabaModuleProps): Promise<any>;\r\n    getOfficeLocation(props: ICabaModuleProps): Promise<any>;\r\n    getDesignation(props: ICabaModuleProps): Promise<IMasterProps>;\r\n    }\r\n\r\nexport default function CabaMasterOps() {\r\n    const spCrudOps = SPCRUDOPS();\r\n    debugger;\r\n    \r\n    const getFlatSpecifications = async (props: ICabaModuleProps): Promise<any[]> => {\r\n        debugger;\r\n        return await (await spCrudOps).getData(\"FlatSpecificationsMaster\"\r\n            , \"*,FlatSpecifications\"\r\n            , \"\"\r\n            , \"\"\r\n            , { column: 'Id', isAscending: false }, props).then(results => {\r\n                console.log(results);\r\n                debugger;\r\n                let master: Array<any> = new Array<any[]>();\r\n                results.map(item => {\r\n                    master.push({\r\n                        key: item.Id,\r\n                        text: item.FlatSpecifications\r\n                    });\r\n                });\r\n\r\n                return master;\r\n            });\r\n    };\r\n    const getFlatType = async (props: ICabaModuleProps): Promise<any[]> => {\r\n\r\n        return await (await spCrudOps).getData(\"CABAFlatTypeMaster\"\r\n            , \"*,FlatType\"\r\n            , \"\"\r\n            , \"\"\r\n            , { column: 'Id', isAscending: false }, props).then(results => {\r\n                console.log(results);\r\n                let master: Array<any> = new Array<any[]>();\r\n                results.map(item => {\r\n                    master.push({\r\n                        key: item.Id,\r\n                        text: item.FlatType,\r\n                        \r\n                    });\r\n                });\r\n\r\n                return master;\r\n            });\r\n    };\r\n    \r\n    const getOccupancyType = async (props: ICabaModuleProps): Promise<any[]> => {\r\n\r\n        return await (await spCrudOps).getData(\"OccupancyTypeMaster\"\r\n            , \"*\"\r\n            , \"\"\r\n            , \"\"\r\n            , { column: 'Id', isAscending: false }, props).then(results => {\r\n                console.log(results);\r\n                let master: Array<any> = new Array<any[]>();\r\n                results.map(item => {\r\n                    master.push({\r\n                        key: item.Id,\r\n                        text: item.OccupancyType\r\n                    });\r\n                });\r\n                return master;\r\n            });\r\n    };\r\n    const getSocietyName = async (props: ICabaModuleProps): Promise<any[]> => {\r\n        return await (await spCrudOps).getData(\"SocietyNameMaster\"\r\n            , \"*\"\r\n            , \"\"\r\n            , \"\"\r\n            , { column: 'Id', isAscending: false }, props).then(results => {\r\n                console.log(results);\r\n                let master: Array<any> = new Array<any[]>();\r\n                results.map(item => {\r\n                    master.push({\r\n                        key: item.Id,\r\n                        text: item.SocietyName\r\n                    });\r\n                });\r\n\r\n                return master;\r\n            });\r\n    };\r\n    const getOfficeLocation = async (props: ICabaModuleProps): Promise<any[]> => {\r\n        return await (await spCrudOps).getData(\"OfficeMaster\"\r\n            , \"*\"\r\n            , \"\"\r\n            , \"\"\r\n            , { column: 'Id', isAscending: false }, props).then(results => {\r\n                console.log(results);\r\n                let master: Array<any> = new Array<any[]>();\r\n                results.map(item => {\r\n                    master.push({\r\n                        key: item.Id,\r\n                        text: item.OfficeLocation\r\n                    });\r\n                });\r\n\r\n                return master;\r\n            });\r\n    };\r\n\r\n    // const getDesignation = async (props: ICabaModuleProps): Promise<IMasterProps[]> => {\r\n    //     var currentUserLogin= props.currentSPContext.pageContext._user._displayName;\r\n    //     return await (await spCrudOps).getData(\"CABA_AssociationList\"\r\n    //         , \"*\"\r\n    //         , \"\"\r\n    //         , \"Designation eq '\"+currentUserLogin+\"'\"\r\n    //         , { column: 'Id', isAscending: false }, props).then(results => {\r\n    //             console.log(results);\r\n    //             let brr: Array<IMasterProps> = new Array<IMasterProps>();\r\n    //             results.map(item => {\r\n    //                 brr.push({\r\n    //                     ID: item.ID,\r\n    //                     Designation: item.Designation,\r\n    //                     FlatType: item.FlatType,\r\n    //                 });\r\n    //             });\r\n\r\n    //             return brr;\r\n    //         });\r\n    // };\r\n    \r\n    return {\r\n        getFlatType       \r\n        , getOccupancyType\r\n        , getSocietyName       \r\n        ,getFlatSpecifications\r\n        ,getOfficeLocation\r\n       // ,getDesignation\r\n    };\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}