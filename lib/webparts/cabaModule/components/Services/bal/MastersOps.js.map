{"version":3,"sources":["webparts/cabaModule/components/Services/bal/MastersOps.ts"],"names":[],"mappings":"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","file":"webparts/cabaModule/components/Services/bal/MastersOps.js","sourcesContent":["import { IEximTravelBlockProps } from '../interface/IEximTravelBlockProps';\nimport SPCRUDOPS from '../dal/spcrudops';\nimport { IEximTravelProps } from \"../interface/IEximTravelProps\";\nimport { IEmployee } from '../interface/IEmployee';\n\n\nexport interface MasterOps {\n    getAgencyNames(props: IEximTravelBlockProps): Promise<any>;\n    getCities(props: IEximTravelBlockProps): Promise<any>;\n    getBookingType(props: IEximTravelBlockProps): Promise<any>;\n    getTravelMode(props: IEximTravelBlockProps): Promise<any>;\n    getTravelModeType(props: IEximTravelBlockProps): Promise<any>;\n    getScale(props: IEximTravelBlockProps): Promise<any>;\n    // insertTravelData(props:IEximTravelBlockProps): Promise<IEximTravelProps>;\n    // getPRDetails(brrId: string | number, props: IEximTravelBlockProps): Promise<IEximTravelProps[]>;\n}\n\nexport default function MasterOps() {\n    const spCrudOps = SPCRUDOPS();\n    // const insertTravelData = async (props: IEximTravelBlockProps): Promise<IEximTravelProps[]> => {\n    //     debugger;\n    //     return await (await spCrudOps).insertData(\"TravelRequest\",travelData,props).then();\n    // }\n    const getAgencyNames = async (props: IEximTravelBlockProps): Promise<any[]> => {\n   \n        return await (await spCrudOps).getData(\"TravelAgencyMaster\"\n            , \"*,TravelAgency/Title,TravelAgency/ID\"\n            , \"TravelAgency\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let master: Array<any> = new Array<any[]>();\n                results.map(item => {\n                    master.push({\n                        key: item.Id,\n                        text: item.AgencyName,\n                        obj: (item.TravelAgency == null ? null : item.TravelAgency)\n                    });\n                });\n\n                return master;\n            });\n    };\n    const getCities = async (props: IEximTravelBlockProps): Promise<any[]> => {\n\n        return await (await spCrudOps).getData(\"CityMaster\"\n            , \"*,CityGrade/Title,CityGrade/Id\"\n            , \"CityGrade\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let master: Array<any> = new Array<any[]>();\n                results.map(item => {\n                    master.push({\n                        key: item.Id,\n                        text: item.Title,\n                        CityGrade: item.CityGrade,\n                        CityGradeId: item.CityGrade !==undefined ? item.CityGrade.Id:'',\n                    });\n                });\n                return master;\n            });\n    };\n    const getBookingType = async (props: IEximTravelBlockProps): Promise<any[]> => {\n\n        return await (await spCrudOps).getData(\"BookingType\"\n            , \"*\"\n            , \"\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let master: Array<any> = new Array<any[]>();\n                results.map(item => {\n                    master.push({\n                        key: item.Id,\n                        text: item.Title\n                    });\n                });\n                return master;\n            });\n    };\n    const getTravelMode = async (props: IEximTravelBlockProps): Promise<any[]> => {\n        return await (await spCrudOps).getData(\"TravelModes\"\n            , \"*\"\n            , \"\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let master: Array<any> = new Array<any[]>();\n                results.map(item => {\n                    master.push({\n                        key: item.Id,\n                        text: item.Title\n                    });\n                });\n\n                return master;\n            });\n    };\n    const getTravelModeType = async (props: IEximTravelBlockProps): Promise<any[]> => {\n        return await (await spCrudOps).getData(\"TravelModeTypes\"\n            , \"*,TravelMode/Title\"\n            , \"TravelMode\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let master: Array<any> = new Array<any[]>();\n                results.map(item => {\n                    master.push({\n                        key: item.Id,\n                        text: item.Title,\n                        Mode: item.TravelModeId,\n\n                    });\n                });\n\n                return master;\n            });\n    };\n    const getScale = async (props: IEximTravelBlockProps): Promise<any[]> => {\n\n        return await (await spCrudOps).getData(\"ScaleMaster\"\n            , \"*\"\n            , \"\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let scale: Array<any> = new Array<any[]>();\n                results.sort((a, b) => b.Id - a.Id).map(item => {\n                    scale.push({\n                        key: item.Id,\n                        text: item.Title\n                    });\n                });\n                return scale;\n            });\n    };\n\n    return {\n        getAgencyNames\n        , getCities\n        , getBookingType\n        , getTravelMode\n        , getTravelModeType\n        , getScale\n    };\n}"],"sourceRoot":"..\\..\\..\\..\\..\\..\\src"}