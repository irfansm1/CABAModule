{"version":3,"sources":["webparts/cabaModule/components/Services/bal/spcrud.ts"],"names":[],"mappings":"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","file":"webparts/cabaModule/components/Services/bal/spcrud.js","sourcesContent":["import { IPropertyPaneTextFieldProps } from \"@microsoft/sp-webpart-base\";\n\n//import { IEximTravelBlockProps } from \"../interface/IEximTravelBlockProps\";\nimport { ICabaModuleProps } from \"../interface/ICabaModuleProps\";\nimport SPCRUDOPS from '../dal/spcrudops'\n\nexport interface ISPCRUD {\n    getData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\n        , orderby: { column: string, isAscending: boolean }, props: ICabaModuleProps): Promise<any>;\n     insertData(listName: string, data: any, props: ICabaModuleProps): Promise<any>;\n     getRootData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\n        , orderby: { column: string, isAscending: boolean }, props: ICabaModuleProps): Promise<any>;\n    batchInsert(listName: string, data: any, props: ICabaModuleProps): Promise<any>;\n    updateData(listName: string, itemId: number, data: any, props: ICabaModuleProps): Promise<any>;\n    //currentProfile(props: ICabaModuleProps): Promise<any>;\n    getGroupUsers(groupId: number,props: ICabaModuleProps): Promise<any>;\n    currentUserInfo(props: ICabaModuleProps): Promise<any>;\n     deleteData(listName: string, itemId: number, props: ICabaModuleProps): Promise<any>;\n    // getListInfo(listName: string, props: IVendorBlockReleaseDevProps): Promise<any>;\n\n    // batchUpdate(listName: string, data: any, props: IVendorBlockReleaseDevProps): Promise<any>;\n    // batchDelete(listName: string, data: any, props: IVendorBlockReleaseDevProps): Promise<any>;\n    // uploadFile(folderServerRelativeUrl: string, file: File, props: IVendorBlockReleaseDevProps): Promise<any>;\n    // deleteFile(fileServerRelativeUrl: string, props: IVendorBlockReleaseDevProps): Promise<any>;\n}\n\nexport default async function SPCRUD(): Promise<ISPCRUD> {\n    const spCrudOps = SPCRUDOPS();\n    \n    const getData = async (listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\n        , orderby: { column: string, isAscending: boolean }, props: ICabaModuleProps) => {\n        const items: any[] = await (await spCrudOps).getData(listName, columnsToRetrieve, columnsToExpand, filters, orderby, props);\n        return items;\n    };\n    const getRootData = async (listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\n        , orderby: { column: string, isAscending: boolean }, props: ICabaModuleProps) => {\n        const items: any[] = await (await spCrudOps).getData(listName, columnsToRetrieve, columnsToExpand, filters, orderby, props);\n        return items;\n    };\n\n    const insertData = async (listName: string, data: any, props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).insertData(listName, data, props);\n        return result;\n    };\nconst batchInsert = async (listName: string, data: any, props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).batchInsert(listName, data, props);\n        return result;\n    };\n    const updateData = async (listName: string, itemId: number, data: any, props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).updateData(listName, itemId, data, props);\n        return result;\n    };\n    // const currentProfile = async (props: ICabaModuleProps) => {\n    //     const result: any = await (await spCrudOps).currentProfile( props);\n    //     return result;\n    // };\n    const currentUserInfo = async (props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).currentUserInfo( props);\n        return result;\n    };\n    const getGroupUsers = async (groupId: number,props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).getGroupUsers(groupId, props);\n        return result;\n    };\n\n    const deleteData = async (listName: string, itemId: number, props: ICabaModuleProps) => {\n        const result: any = await (await spCrudOps).deleteData(listName, itemId, props);\n        return result;\n    };\n\n    // const getListInfo = async (listName: string, props: IVendorBlockReleaseDevProps) => {\n    //     const list: any = await (await spCrudOps).getListInfo(listName, props);\n    //     return list;\n    // };\n\n    \n\n    // const batchUpdate = async (listName: string, data: any, props: IVendorBlockReleaseDevProps) => {\n    //     const result: any = await (await spCrudOps).batchUpdate(listName, data, props);\n    //     return result;\n    // };\n\n    // const batchDelete = async (listName: string, data: any, props: IVendorBlockReleaseDevProps) => {\n    //     const result: any = await (await spCrudOps).batchDelete(listName, data, props);\n    //     return result;\n    // };\n    // const uploadFile = async (folderServerRelativeUrl: string, file: File, props: IVendorBlockReleaseDevProps) => {\n    //     const result: any = await (await spCrudOps).uploadFile(folderServerRelativeUrl, file, props);\n    //     return result;\n    // };\n    // const deleteFile = async (fileServerRelativeUrl: string, props: IVendorBlockReleaseDevProps) => {\n    //     const result: any = await (await spCrudOps).deleteFile(fileServerRelativeUrl, props);\n    //     return result;\n    // };\n\n    return {\n        getData\n       ,insertData\n       ,getRootData\n       ,batchInsert\n       ,updateData\n      //, currentProfile\n       ,getGroupUsers\n       ,currentUserInfo\n       //,batchUpdate\n        , deleteData,\n        // getListInfo,\n        // batchInsert,\n\n        // batchDelete,\n        // uploadFile,\n        // deleteFile\n    };\n}"],"sourceRoot":"../../../../../../src"}